/*
 * ICSMDisplay.java
 *
 * Created on March 19, 2010, 10:37 AM
 */

package falcon;

/**
 *
 * @author  WA0003EN
 */
public class WeaponSMDisplay extends java.awt.Frame {
    
    protected FusionART WeaponSM;
    
    protected String allWeapons [] = new String [] {"FLAK_CANNON", "MINIGUN",
            "ROCKET_LAUNCHER", "LINK_GUN", "BIO_RIFLE", "LIGHTNING_GUN",
            "SHOCK_RIFLE", "SNIPER_RIFLE", "ASSAULT_RIFLE", "SHIELD_GUN"};

    /** Creates new form ICSMDisplay */
    public WeaponSMDisplay() {
        initComponents();
        setVisible(true);
    }
    
    public void setWeaponSM(FusionART weaponSM){
        WeaponSM=weaponSM;
        
        for(int i=0;i<WeaponSM.numCode-1;i++){
            this.jComboBox1.addItem(new String(""+i));
        }    
        
        for(int i=0;i<allWeapons.length;i++){
            this.jComboBox2.addItem(new String(""+allWeapons[i]));
        }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jLabel4 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox();
        jComboBox2 = new javax.swing.JComboBox();
        jTextField1 = new javax.swing.JTextField();

        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                exitForm(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(51, 51, 51));

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setFont(new java.awt.Font("Bodoni MT", 3, 24));
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("EVENTS ONLINE DISPlAY");

        jLabel3.setBackground(new java.awt.Color(255, 255, 255));
        jLabel3.setFont(new java.awt.Font("Bodoni MT", 0, 14));
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("View A Code");

        jLabel7.setBackground(new java.awt.Color(255, 255, 255));
        jLabel7.setFont(new java.awt.Font("Bodoni MT", 0, 18));
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Results");

        jTextArea1.setColumns(20);
        jTextArea1.setFont(new java.awt.Font("Bodoni MT", 0, 12));
        jTextArea1.setForeground(new java.awt.Color(0, 102, 153));
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        jLabel4.setBackground(new java.awt.Color(255, 255, 255));
        jLabel4.setFont(new java.awt.Font("Bodoni MT", 0, 14));
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Query Weapon SM");

        jComboBox1.setFont(new java.awt.Font("Bodoni MT", 0, 12)); // NOI18N
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Select a code index to view" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jComboBox2.setFont(new java.awt.Font("Bodoni MT", 0, 12)); // NOI18N
        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Weapon" }));
        jComboBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox2actionPerformed(evt);
            }
        });

        jTextField1.setText("Distance");
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 482, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(102, 102, 102))
                                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(227, 227, 227))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 483, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jComboBox1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jTextField1)))))))
                .addContainerGap(34, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 355, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(21, Short.MAX_VALUE))
        );

        add(jPanel1, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /** Exit the Application */
    private void exitForm(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_exitForm
        System.exit(0);
    }//GEN-LAST:event_exitForm

private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
// TODO add your handling code here:
     if (this.jComboBox1.getSelectedIndex() == 0) {
        return;
    }

    int ptr = this.jComboBox1.getSelectedIndex() - 1;
    this.jTextArea1.setText(getCodeDispt(ptr));
}//GEN-LAST:event_jComboBox1ActionPerformed

private void jComboBox2actionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox2actionPerformed
// TODO add your handling code here:
    if (this.jComboBox2.getSelectedIndex() == 0) {
        return;
    }

    int weaponPtr = this.jComboBox2.getSelectedIndex() - 1;
    double dist=-1;
    try{
        int inDist=Integer.parseInt(jTextField1.getText());
        dist=((double) inDist)/(double) 3000;
    }
    catch(Exception ex){
        ex.printStackTrace();
    }
    this.query(weaponPtr, dist);
}//GEN-LAST:event_jComboBox2actionPerformed

private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
// TODO add your handling code here:
    if (this.jComboBox2.getSelectedIndex() == 0) {
        return;
    }

    int weaponPtr = this.jComboBox2.getSelectedIndex() - 1;
    double dist=-1;
    try{
        int inDist=Integer.parseInt(jTextField1.getText());
        dist=((double) inDist)/(double) 3000;
    }
    catch(Exception ex){
        ex.printStackTrace();
    }
    this.query(weaponPtr, dist);
}//GEN-LAST:event_jTextField1ActionPerformed

private void query(int weaponPtr, double dist){
    double[][] inPattern=new double[this.WeaponSM.numSpace][];
    for (int k=0;k<WeaponSM.numSpace;k++) {
         inPattern[k] = new double [WeaponSM.len[k]];
         System.arraycopy(resetStatus(inPattern[k]), 0, inPattern[k], 0, inPattern[k].length);
    }
    
    if(weaponPtr>=0){
        inPattern[0][weaponPtr*2]=1;
        inPattern[0][weaponPtr*2+1]=0;
    }
    
    if(dist>=0&&dist<=1){
        inPattern[0][0]=dist;
        inPattern[0][1]=1-dist;
    }    
    
    if(weaponPtr>=0&&dist>=0&&dist<=1){
        int[] winners = this.WeaponSM.findWinnerK(inPattern, WeaponSM.FUZZYART,2, 0.99);
    
        if(winners==null){
            System.out.println("Unsuccessful retrieve!!!!");
            this.jTextArea1.setText("N.A.");
            return;
        }       
        else{
            String str="";
            for(int i=0;i<winners.length;i++){
                str+=this.getCodeDispt(winners[i]);
            }
            this.jTextArea1.setText(str);
        }
    }
    else if(weaponPtr<0){
        double[] tempGamma=new double[this.WeaponSM.gamma.length];
        System.arraycopy(this.WeaponSM.gamma, 0, tempGamma, 0, this.WeaponSM.gamma.length);
        WeaponSM.gamma=new double[]{(double) 0, (double)1, (double) 0};
        
        int[] winners = this.WeaponSM.findWinnerK(inPattern, WeaponSM.FUZZYART,2,0.99);
    
        if(winners==null){
            System.out.println("Unsuccessful retrieve!!!!");
            this.jTextArea1.setText("N.A.");
            return;
        }       
        else{
            String str="";
            for(int i=0;i<winners.length;i++){
                str+=this.getCodeDispt(winners[i]);
            }
            this.jTextArea1.setText(str);
        }
        
        System.arraycopy(tempGamma, 0, this.WeaponSM.gamma, 0, this.WeaponSM.gamma.length);
    }
    
    else if(dist<0||dist>1){
        double[] tempGamma=new double[this.WeaponSM.gamma.length];
        System.arraycopy(this.WeaponSM.gamma, 0, tempGamma, 0, this.WeaponSM.gamma.length);
        WeaponSM.gamma=new double[]{(double) 1, (double)0, (double) 0};
        
        int[] winners = this.WeaponSM.findWinnerK(inPattern, WeaponSM.FUZZYART,2,0.99);
    
        if(winners==null){
            System.out.println("Unsuccessful retrieve!!!!");
            this.jTextArea1.setText("N.A.");
            return;
        }       
        else{
            String str="";
            for(int i=0;i<winners.length;i++){
                str+=this.getCodeDispt(winners[i]);
            }
            this.jTextArea1.setText(str);
        }
        System.arraycopy(tempGamma, 0, this.WeaponSM.gamma, 0, this.WeaponSM.gamma.length);
    }
}

 private double[] resetStatus(double[] arr){
        for(int j=0;j<arr.length;j++){
            if(j%2==0){
                arr[j]=0;
            }
            else{
                arr[j]=1;
            }
        }
        
        return arr;
    }

private String getCodeDispt(int codeIndex){
    String str="IF Weapon = ";    
    double[][] codeArr=this.WeaponSM.weight[codeIndex];
    
    System.out.print("Print a code "+codeIndex+"\t");
    for(int i=0;i<codeArr[0].length/2;i++){
        if(codeArr[0][2*i]==1){
            str+=this.allWeapons[i]+", ";
        }
        System.out.print(codeArr[0][2*i]+" ");
    }
    
    System.out.print("\t");
    
    str+="Distance = ";
    int distMin=(int)((codeArr[1][0]<=(1-codeArr[1][1])?codeArr[1][0]:(1-codeArr[1][1]))*3000);
    int distMax=(int)((codeArr[1][0]>(1-codeArr[1][1])?codeArr[1][0]:(1-codeArr[1][1]))*3000);
    if(distMin==distMax){
        str+=distMax+", ";
    }
    else{
        str+=distMin+" ~ "+distMax+", ";
    }
    
    System.out.print("\t");
    
    str+="THEN Efficiency = ";
    int rwdMin=(int)((codeArr[2][0]<=(1-codeArr[2][1])?codeArr[2][0]:(1-codeArr[2][1]))*100);
    int rwdMax=(int)((codeArr[2][0]>(1-codeArr[2][1])?codeArr[2][0]:(1-codeArr[2][1]))*100);
    if(rwdMin==rwdMax){
        str+=rwdMax+", ";
    }
    else{
        str+=rwdMin+" ~ "+rwdMax+", ";
    }
    
    return str+"\n";
}
    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new WeaponSMDisplay().setVisible(true);
            }
        });
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JComboBox jComboBox2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables

}
